const jwt = require("jsonwebtoken");
const fs = require("fs");

module.exports = {
  name: "example",
  policy: actionParams => {
    // return (req, res, next) => {
    //   const authorization = req.headers.authorization.replace("Bearer ", "");

    //   var cert = fs.readFileSync("./config/public.pem");
    //   jwt.verify(authorization, cert, function(err, decoded) {
    //     if (err) {
    //     } else {
    //       req.headers["decoded"] = JSON.stringify(decoded);
    //       next();
    //     }
    //   });


    return (req, res, next) => {
      if(req.query.id_token==undefined){
        if(req.headers.cookie){
          let cookie = req.headers['cookie'];
          var result = cookie.match(new RegExp("tokenId" + '=([^;]+)'));
          result && (result = JSON.parse(result[1]));
          console.log(result);
          console.log("has cookie");
          next();
        }
        else{
          const reqUrl =  `https://node-oidc-provider-examples-ykwufwclzr.now.sh/auth?issuerHost=https://node-oidc-provider-examples-ykwufwclzr.now.sh&client_id=foobar&redirect_uri=https://noumandilshad-apigateway-2.glitch.me/callback&scope=openid&response_type=id_token+token&nonce=1122`
          res.redirect(reqUrl);
        }
      }

      else if(req.query.id_token!=undefined){
          // let token_id = req.query.id_token;  
          // request.setHeader('content-type', 'json');      
          // res.setHeader('Set-Cookie', {token:token_id})
          // res.setHeader('Authorization', 'Bearer ' + token_id );
          // res.send("Header Set.");
        next();
      }
        // const accessToken = req.headers['token'];
        //   if(!accessToken){
        //     console.log("no access token")
        //     let clientId = req.body.clientId | 'foo';
        //     let clientSecret = req.body.clientSecret | 'bar';
        //     let redirUrl = req.body.redirUrl | 'http://localhost:9001/token';
        //     let issuerHost = req.body.issuerHost | 'http://localhost:8081';
        //     //let scopes = (req.body.scopes).replace(/ /gi, '+') | 'openid profile roles';
        //     let scopes = 'openid profile roles';
        //     let responseType = req.body.responseType | 'code';
            
        //     // const reqUrl =  `http://localhost:8081/auth?issuerHost=${issuerHost}&client_id=${clientId}&client_secret=${clientSecret}&redirect_uri=${redirUrl}&scope=${scopes}&response_type=${responseType}`
        //     const reqUrl =  `http://localhost:8081/auth?issuerHost=http://localhost:8081&client_id=foobar&redirect_uri=https://example.com&scope=openid&response_type=id_token+token&nonce=1122`
            
        //     res.redirect(reqUrl);            
        //   }
        //   else if(accessToken){
        //     console.log("access token")
        //     next()
        //   }
        //   else{
        //     res.send("Please Provide Access Token.");
        //     next();
        //   }

      

        // if(req.query.id_token==undefined){
        //   if(req.headers['Authorization']){
        //     next();
        //   }
        //   else{
        //     const reqUrl =  `http://localhost:8081/auth?issuerHost=http://localhost:8081&client_id=foobar&redirect_uri=https://example.com&scope=openid&response_type=id_token+token&nonce=1122`
        //     res.redirect(reqUrl);
        //   }
        // }

        // else if(req.query.id_token!=undefined){
        //     let token_id = req.query.id_token;        
        //     res.setHeader('Authorization', 'Bearer ' + token_id );
        //     res.send("Header Set.");
        //   next();
        // }

        // if(!req.headers['Authorization']){      
        //     console.log("No auth header found.")    
        //     const reqUrl =  `http://localhost:8081/auth?issuerHost=http://localhost:8081&client_id=foobar&redirect_uri=https://example.com&scope=openid&response_type=id_token+token&nonce=1122`
        //     res.redirect(reqUrl);
        // }
        // else if(req.headers['Authorization']){
        //   console.log("Found the auth header.")
        //   next();
        // }

        }
      }}


      // bcrypt.hash(authorization, 10, function(err, hash) {
      //   const consumer = {};
      //   consumer.id = "consumer.id";
      //   consumer.name = "consumer.name";
      //   consumer.type = "consumer.type";
      //   consumer.requestID = "requestID";
      //   consumer.token = "consumer.token.scopes";
      //   req.headers["hash"] = hash;
      //   next();
      // });
